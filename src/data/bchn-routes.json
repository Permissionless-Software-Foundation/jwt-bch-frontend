[
  {
    "name": "ElectrumX / Fulcrum",
    "description": "Query ElectrumX Indexer Network",
    "docUrl": "https://bchn.fullstack.cash/docs/#api-ElectrumX_/_Fulcrum",
    "endpoints": [
      {
        "type": "get",
        "shortDescription": "Get balance for a single address",
        "detailedDescription": "Returns an object with BCH balances for an address.",
        "endpoint": "/electrumx/balance/",
        "parameters": "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3",
        "parametersName": "address",
        "parameterDescription": "BCH Cash Address"
      },
      {
        "type": "post",
        "shortDescription": "Get balances for an array of addresses",
        "detailedDescription": "Returns an array of objects. Each object contains BCH balances for an address. Up to 20 addresses per request.",
        "endpoint": "/electrumx/balance",
        "parametersName": "addresses",
        "parameterDescription": "Array of addresses",
        "body": {
          "addresses": [
            "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3",
            "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Get utxos for a single address",
        "detailedDescription": "Returns an object with UTXOs associated with an address.",
        "endpoint": "/electrumx/utxos/",
        "parameters": "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3",
        "parametersName": "address",
        "parameterDescription": "BCH Cash Address"
      },
      {
        "type": "post",
        "shortDescription": "Get UTXOs for an array of addresses",
        "detailedDescription": "Returns an array of objects. Each object contains UTXOs for an address. Up to 20 addresses per request.",
        "endpoint": "/electrumx/utxos",
        "parametersName": "addresses",
        "parameterDescription": "Array of addresses",
        "body": {
          "addresses": [
            "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3",
            "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Get transaction history for a single address",
        "detailedDescription": "Returns an object with transactions for an address.",
        "endpoint": "/electrumx/transactions/",
        "parameters": "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3",
        "parametersName": "address",
        "parameterDescription": "BCH Cash Address"
      },
      {
        "type": "post",
        "shortDescription": "Get transaction history for an array of addresses",
        "detailedDescription": "Returns an array of objects. Each object contains transaction history for an address. Up to 20 addresses per request.",
        "endpoint": "/electrumx/transactions",
        "parametersName": "addresses",
        "parameterDescription": "Array of addresses",
        "body": {
          "addresses": [
            "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3",
            "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Get unconfirmed UTXOs (mempool) for a single address",
        "detailedDescription": "Returns an object with unconfirmed UTXOs associated with an address.",
        "endpoint": "/electrumx/unconfirmed/",
        "parameters": "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3",
        "parametersName": "address",
        "parameterDescription": "BCH Cash Address"
      },
      {
        "type": "post",
        "shortDescription": "Get unconfirmed UTXOs (mempool) for an array of addresses",
        "detailedDescription": "Returns an array of objects. Each object contains unconfirmed UTXOs for an address. Up to 20 addresses per request.",
        "endpoint": "/electrumx/unconfirmed",
        "parametersName": "addresses",
        "parameterDescription": "Array of addresses",
        "body": {
          "addresses": [
            "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3",
            "bitcoincash:qr69kyzha07dcecrsvjwsj4s6slnlq4r8c30lxnur3"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Get transaction details for a TXID",
        "detailedDescription": "Returns an object with details for the transaction - inputs, outputs etc.",
        "endpoint": "/electrumx/tx/data/",
        "parameters": "4db095f34d632a4daf942142c291f1f2abb5ba2e1ccac919d85bdc2f671fb251",
        "parametersName": "TXID",
        "parameterDescription": "Transaction ID"
      },
      {
        "type": "post",
        "shortDescription": "Get transaction details for an array of TXIDs",
        "detailedDescription": "Returns an array of objects. Each object contains transaction details for one TXID. Up to 20 TXIDs per request.",
        "endpoint": "/electrumx/tx/data",
        "parametersName": "TXIDs",
        "parameterDescription": "Array of transaction IDs",
        "body": {
          "txids": [
            "4db095f34d632a4daf942142c291f1f2abb5ba2e1ccac919d85bdc2f671fb251",
            "4db095f34d632a4daf942142c291f1f2abb5ba2e1ccac919d85bdc2f671fb251"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Get 'count' block headers starting at a height",
        "detailedDescription": "Returns an array with block headers starting at the block height",
        "endpoint": "/electrumx/block/headers/",
        "parameters": "42?count=2",
        "parametersName": "Height and count",
        "parameterDescription": "count blocks, starting at height"
      },
      {
        "type": "post",
        "shortDescription": "Broadcast a single raw transaction.",
        "detailedDescription": "Broadcast a raw transaction and return the transaction ID on success or error on failure.",
        "endpoint": "/electrumx/tx/broadcast",
        "parametersName": "txHex",
        "parameterDescription": "hex-encoded",
        "body": {
          "txHex": "020000000265d13ef402840c8a51f39779afb7ae4d49e4b0a3c24a3d0e7742038f2c679667010000006441dd1dd72770cadede1a7fd0363574846c48468a398ddfa41a9677c74cac8d2652b682743725a3b08c6c2021a629011e11a264d9036e9d5311e35b5f4937ca7b4e4121020797d8fd4d2fa6fd7cdeabe2526bfea2b90525d6e8ad506ec4ee3c53885aa309ffffffff65d13ef402840c8a51f39779afb7ae4d49e4b0a3c24a3d0e7742038f2c679667000000006441347d7f218c11c04487c1ad8baac28928fb10e5054cd4494b94d078cfa04ccf68e064fb188127ff656c0b98e9ce87f036d183925d0d0860605877d61e90375f774121028a53f95eb631b460854fc836b2e5d31cad16364b4dc3d970babfbdcc3f2e4954ffffffff035ac355000000000017a914189ce02e332548f4804bac65cba68202c9dbf822878dfd0800000000001976a914285bb350881b21ac89724c6fb6dc914d096cd53b88acf9ef3100000000001976a91445f1f1c4a9b9419a5088a3e9c24a293d7a150e6488ac00000000"
        }
      }
    ]
  },
  {
    "name": "Blockchain",
    "description": "Get Blockchain info",
    "docUrl": "https://bchn.fullstack.cash/docs/#api-Blockchain",
    "endpoints": [
      {
        "type": "get",
        "shortDescription": "Get Block Count.",
        "detailedDescription": "Returns the number of blocks in the longest blockchain.",
        "endpoint": "/blockchain/getBlockCount/"
      },
      {
        "type": "get",
        "shortDescription": "Get Chain Tips.",
        "detailedDescription": "Return information about all known tips in the block tree, including the main chain as well as orphaned branches.",
        "endpoint": "/blockchain/getChainTips/"
      },
      {
        "type": "get",
        "shortDescription": "Get Mempool Ancestors.",
        "detailedDescription": "Returns mempool ancestors data for given TXID. It must be in mempool (unconfirmed). This call is handy to tell if a UTXO is bumping up against the 25 ancestor chain-limit.",
        "endpoint": "/blockchain/getMempoolAncestors/",
        "parameters": "bbda45af0ba57e28866995c67a53c225336fddd14eb3dc87f2f3500fd61c8585",
        "parametersName": "TXID",
        "parameterDescription": "Transaction ID"
      },
      {
        "type": "get",
        "shortDescription": "Get Tx Out Proof.",
        "detailedDescription": "Returns a hex-encoded proof that 'txid' was included in a block.",
        "endpoint": "/blockchain/getTxOutProofSingle/",
        "parameters": "bbda45af0ba57e28866995c67a53c225336fddd14eb3dc87f2f3500fd61c8585",
        "parametersName": "TXID",
        "parameterDescription": "Transaction ID"
      },
      {
        "type": "get",
        "shortDescription": "Get Tx Out.",
        "detailedDescription": "Returns details about an unspent transaction output.",
        "endpoint": "/blockchain/getTxOut/",
        "parameters": "fe28050b93faea61fa88c4c630f0e1f0a1c24d0082dd0e10d369e13212128f33/0?mempool=false",
        "parametersName": "TXID",
        "parameterDescription": "Transaction ID"
      },
      {
        "type": "post",
        "shortDescription": "Get details on a TX output",
        "detailedDescription": "Returns details about an unspent transaction output.",
        "endpoint": "/blockchain/getTxOut/",
        "parametersName": "TXID",
        "parameterDescription": "TX Output details",
        "body": {
          "txid": "d5228d2cdc77fbe5a9aa79f19b0933b6802f9f0067f42847fc4fe343664723e5",
          "vout": 0,
          "mempool": true
        }
      },
      {
        "type": "get",
        "shortDescription": "Get best block hash.",
        "detailedDescription": "Returns the hash of the best (tip) block in the longest block chain.",
        "endpoint": "/blockchain/getBestBlockHash"
      },
      {
        "type": "get",
        "shortDescription": "Get blockchain info",
        "detailedDescription": "Returns an object containing various state info regarding blockchain processing.",
        "endpoint": "/blockchain/getBlockchainInfo"
      },
      {
        "type": "post",
        "shortDescription": "Get bulk mempool entry",
        "detailedDescription": "Returns mempool data for multiple transactions.",
        "endpoint": "/blockchain/getMempoolEntry",
        "parametersName": "TXID",
        "parameterDescription": "Array of TXIDs",
        "body": {
          "txids": [
            "a5f972572ee1753e2fd2457dd61ce5f40fa2f8a30173d417e49feef7542c96a1",
            "5165dc531aad05d1149bb0f0d9b7bda99c73e2f05e314bcfb5b4bb9ca5e1af5e"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Get difficulty.",
        "detailedDescription": "Get the current difficulty value, used to regulate mining power on the network.",
        "endpoint": "/blockchain/getDifficulty"
      },
      {
        "type": "get",
        "shortDescription": "Get mempool info.",
        "detailedDescription": "Returns details on the active state of the TX memory pool.",
        "endpoint": "/getMempoolInfo"
      },
      {
        "type": "post",
        "shortDescription": "Get multiple block headers.",
        "detailedDescription": "If verbose is false (default), returns a string that is serialized, hex-encoded data for blockheader 'hash'. If verbose is true, returns an Object with information about blockheader hash.",
        "endpoint": "/blockchain/getBlockHeader",
        "parametersName": "hashes",
        "parameterDescription": "Array of hashes",
        "body": {
          "hashes": [
            "000000000000000005e14d3f9fdfb70745308706615cfa9edca4f4558332b201",
            "00000000000000000568f0a96bf4348847bc84e455cbfec389f27311037a20f3"
          ],
          "verbose": true
        }
      },
      {
        "type": "get",
        "shortDescription": "Get raw mempool.",
        "detailedDescription": "Returns all transaction ids in memory pool as a json array of string transaction ids.",
        "endpoint": "/getRawMempool/",
        "parameters": "?verbose=true",
        "parametersName": "Verbose",
        "parameterDescription": "Return verbose data"
      },
      {
        "type": "get",
        "shortDescription": "Get single block header.",
        "detailedDescription": "If verbose is false (default), returns a string that is serialized, hex-encoded data for blockheader 'hash'. If verbose is true, returns an Object with information about blockheader hash.",
        "endpoint": "/blockchain/getBlockHeader/",
        "parameters": "000000000000000005e14d3f9fdfb70745308706615cfa9edca4f4558332b201?verbose=true",
        "parametersName": "Hash & verbose",
        "parameterDescription": "block hash and verbose data"
      },
      {
        "type": "get",
        "shortDescription": "Get single mempool entry.",
        "detailedDescription": "Returns mempool data for given transaction. TXID must be in mempool (unconfirmed)",
        "endpoint": "/blockchain/getMempoolEntry/",
        "parameters": "fe28050b93faea61fa88c4c630f0e1f0a1c24d0082dd0e10d369e13212128f33",
        "parametersName": "TXID",
        "parameterDescription": "Transaction ID"
      },
      {
        "type": "post",
        "shortDescription": "Get Block",
        "detailedDescription": "Returns data from the block hash.",
        "endpoint": "/blockchain/getBlock/",
        "parametersName": "Hash & verbose",
        "parameterDescription": "block hash and verbose. default verbosity 1. verbosity 0 (hex-encoded) . verbosity 1 (object). verbosity 2 (object with transaction info)",
        "body": {
          "blockhash": "0000000000000000008e8d83cba6d45a9314bc2ef4538d4e0577c6bed8593536",
          "verbosity": 1
        }
      }
    ]
  },
  {
    "name": "Control",
    "description": "Get Control info",
    "docUrl": "https://bchn.fullstack.cash/docs/#api-Control",
    "endpoints": [
      {
        "type": "get",
        "shortDescription": "Get Network Info.",
        "detailedDescription": "RPC call which gets basic full node information.",
        "endpoint": "/control/getnetworkinfo"
      }
    ]
  },
  {
    "name": "Encryption",
    "description": "Bitcoin-based Encryption Tools",
    "docUrl": "https://bchn.fullstack.cash/docs/#api-Encryption",
    "endpoints": [
      {
        "type": "get",
        "shortDescription": "Get public key for a BCH address",
        "detailedDescription": "Scans the blockchain and tries to find the public key associated with a BCH address.",
        "endpoint": "/encryption/publickey/",
        "parameters": "bitcoincash:qrehqueqhw629p6e57994436w730t4rzasnly00ht0",
        "parametersName": "address",
        "parameterDescription": "BCH Cash Address"
      }
    ]
  },
  {
    "name": "Mining",
    "description": "Get Mining Info",
    "docUrl": "https://bchn.fullstack.cash/docs/#api-Mining",
    "endpoints": [
      {
        "type": "get",
        "shortDescription": "Returns network hashes",
        "detailedDescription": "Returns the estimated network hashes per second based on the last n blocks",
        "endpoint": "/mining/getNetworkHashps?",
        "parameters": "nblocks=120&height=-1",
        "parametersName": "N-Blocks , Height",
        "parameterDescription": ""
      },
      {
        "type": "get",
        "shortDescription": "Get Mining Info.",
        "detailedDescription": "Returns a json object containing mining-related information.        ",
        "endpoint": "/mining/getMiningInfo"
      }
    ]
  },
  {
    "name": "Raw Transaction",
    "description": "Get Raw Transaction Info",
    "docUrl": "https://bchn.fullstack.cash/docs/#api-Raw_Transaction",
    "endpoints": [
      {
        "type": "post",
        "shortDescription": "Bulk Decode Script.",
        "detailedDescription": "Decode multiple hex-encoded scripts.",
        "endpoint": "/rawtransactions/decodeScript",
        "parametersName": "hexes",
        "parameterDescription": "Array of hexes",
        "body": {
          "hexes": [
            "01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000",
            "01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000"
          ]
        }
      },
      {
        "type": "post",
        "shortDescription": "Decode Bulk Raw Transactions",
        "detailedDescription": "Return bulk hex encoded transaction.",
        "endpoint": "/rawtransactions/decodeRawTransaction",
        "parametersName": "hexes",
        "parameterDescription": "Array of hexes",
        "body": {
          "hexes": [
            "01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000",
            "01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Decode Single Raw Transaction.",
        "detailedDescription": "Return a JSON object representing the serialized, hex-encoded transaction.",
        "endpoint": "/rawtransactions/decodeRawTransaction/",
        "parameters": "02000000010e991f7ccec410f27d333f737f149b5d3be6728687da81072e638aed0063a176010000006b483045022100cd20443b0af090053450bc4ab00d563d4ac5955bb36e0135b00b8a96a19f233302205047f2c70a08c6ef4b76f2d198b33a31d17edfaa7e1e9e865894da0d396009354121024d4e7f522f67105b7bf5f9dbe557e7b2244613fdfcd6fe09304f93877328f6beffffffff02a0860100000000001976a9140ee020c07f39526ac5505c54fa1ab98490979b8388acb5f0f70b000000001976a9143a9b2b0c12fe722fcf653b6ef5dcc38732d6ff5188ac00000000",
        "parametersName": "Hex",
        "parameterDescription": "Hex-Encoded"
      },
      {
        "type": "get",
        "shortDescription": "Decode Single Script.",
        "detailedDescription": "Decode a hex-encoded script.",
        "endpoint": "/rawtransactions/decodeScript/",
        "parameters": "4830450221009a51e00ec3524a7389592bc27bea4af5104a59510f5f0cfafa64bbd5c164ca2e02206c2a8bbb47eabdeed52f17d7df668d521600286406930426e3a9415fe10ed592012102e6e1423f7abde8b70bca3e78a7d030e5efabd3eb35c19302542b5fe7879c1a16",
        "parametersName": "Hex",
        "parameterDescription": "Hex-Encoded"
      },
      {
        "type": "post",
        "shortDescription": " Get Bulk Raw Transactions.",
        "detailedDescription": "Return the raw transaction data for multiple transactions. If verbose is 'true', returns an Object with information about 'txid'. If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.",
        "endpoint": "/rawtransactions/getRawTransaction",
        "parametersName": "txid",
        "parameterDescription": "Array of txids",
        "body": {
          "txids": [
            "a5f972572ee1753e2fd2457dd61ce5f40fa2f8a30173d417e49feef7542c96a1",
            "5165dc531aad05d1149bb0f0d9b7bda99c73e2f05e314bcfb5b4bb9ca5e1af5e"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Return the raw transaction data.",
        "detailedDescription": "return the raw transaction data. If verbose is 'true', returns an Object with information about 'txid'. If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.",
        "endpoint": "/rawtransactions/getRawTransaction/",
        "parameters": "fe28050b93faea61fa88c4c630f0e1f0a1c24d0082dd0e10d369e13212128f33?verbose=true",
        "parametersName": "txid",
        "parameterDescription": "txid"
      },
      {
        "type": "post",
        "shortDescription": "Send Bulk Raw Transactions.",
        "detailedDescription": "Submits multiple raw transaction (serialized, hex-encoded) to local node and network.",
        "endpoint": "/rawtransactions/sendRawTransaction",
        "parametersName": "hexes",
        "parameterDescription": "Array of hexes",
        "body": {
          "hexes": [
            "01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000",
            "01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Send Single Raw Transaction.",
        "detailedDescription": "Submits single raw transaction (serialized, hex-encoded) to local node and network.",
        "endpoint": "/rawtransactions/sendRawTransaction/",
        "parameters": "01000000013ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a000000006a4730440220540986d1c58d6e76f8f05501c520c38ce55393d0ed7ed3c3a82c69af04221232022058ea43ed6c05fec0eccce749a63332ed4525460105346f11108b9c26df93cd72012103083dfc5a0254613941ddc91af39ff90cd711cdcde03a87b144b883b524660c39ffffffff01807c814a000000001976a914d7e7c4e0b70eaa67ceff9d2823d1bbb9f6df9a5188ac00000000",
        "parametersName": "hex",
        "parameterDescription": "hex-encoded"
      }
    ]
  },
  {
    "name": "SLP",
    "description": "Get SLP info",
    "docUrl": "https://bchn.fullstack.cash/docs/#api-SLP",
    "endpoints": [
      {
        "type": "get",
        "shortDescription": "Convert address to slpAddr, cashAddr and legacy",
        "detailedDescription": "Convert address to slpAddr, cashAddr and legacy",
        "endpoint": "/slp/convert/",
        "parameters": "simpleledger:qz9tzs6d5097ejpg279rg0rnlhz546q4fsnck9wh5m",
        "parametersName": "Address",
        "parameterDescription": "SLP Address"
      },
      {
        "type": "get",
        "shortDescription": "List SLP balance for address.",
        "detailedDescription": "List SLP balance for address.",
        "endpoint": "/slp/balancesForAddress/",
        "parameters": "simpleledger:qz9tzs6d5097ejpg279rg0rnlhz546q4fsnck9wh5m",
        "parametersName": "Address",
        "parameterDescription": "SLP Address"
      },
      {
        "type": "post",
        "shortDescription": "List SLP balances for an array of addresses.",
        "detailedDescription": "Returns SLP balances for an array of addresses.",
        "endpoint": "/slp/balancesForAddress/",
        "parametersName": "SLP address",
        "parameterDescription": "Array of SLP addresses",
        "body": {
          "addresses": [
            "simpleledger:qqss4zp80hn6szsa4jg2s9fupe7g5tcg5ucdyl3r57"
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "List stats for a single slp token.",
        "detailedDescription": "Return list stats for a single slp token.",
        "endpoint": "/slp/tokenStats/",
        "parameters": "9ba379fe8171176d4e7e6771d9a24cd0e044c7b788d5f86a3fdf80904832b2c0",
        "parametersName": "tokenId",
        "parameterDescription": "tokenId"
      },
      {
        "type": "get",
        "shortDescription": "List SLP addresses and balances for tokenId.",
        "detailedDescription": "Returns List SLP addresses and balances for tokenId.",
        "endpoint": "/slp/balancesForToken/",
        "parameters": "9ba379fe8171176d4e7e6771d9a24cd0e044c7b788d5f86a3fdf80904832b2c0",
        "parametersName": "tokenId",
        "parameterDescription": "tokenId"
      },
      {
        "type": "get",
        "shortDescription": "SLP transaction details.",
        "detailedDescription": "Transaction details on a token transfer.",
        "endpoint": "/slp/txDetails/",
        "parameters": "8ab4ac5dea3f9024e3954ee5b61452955d659a34561f79ef62ac44e133d0980e",
        "parametersName": "TXID",
        "parameterDescription": "TXID"
      },
      {
        "type": "get",
        "shortDescription": "SLP transactions by tokenId and address.",
        "detailedDescription": "Transactions by tokenId and address.",
        "endpoint": "/slp/transactions/",
        "parameters": "9ba379fe8171176d4e7e6771d9a24cd0e044c7b788d5f86a3fdf80904832b2c0/simpleledger:qrxa0unrn67rtn85v7asfddhhth43ecnxua0antk2l",
        "parametersName": "TXID",
        "parameterDescription": "TXID"
      },
      {
        "type": "get",
        "shortDescription": "Validate single SLP transaction by txid.",
        "detailedDescription": "Validate single SLP transaction by txid.",
        "endpoint": "/slp/validateTxid/",
        "parameters": "f7e5199ef6669ad4d078093b3ad56e355b6ab84567e59ad0f08a5ad0244f783a",
        "parametersName": "TXID",
        "parameterDescription": "TXID"
      },
      {
        "type": "post",
        "shortDescription": "Validate multiple SLP transactions by txid.",
        "detailedDescription": "Validate multiple SLP transactions by txid.",
        "endpoint": "/slp/validateTxid/",
        "parametersName": "TXIDs",
        "parameterDescription": "Array of TXIDs",
        "body": {
          "txids": [
            "f7e5199ef6669ad4d078093b3ad56e355b6ab84567e59ad0f08a5ad0244f783a",
            "fb0eeaa501a6e1acb721669c62a3f70741f48ae0fd7f4b8e1d72088785c51952"
          ]
        }
      },
      {
        "type": "post",
        "shortDescription": "Generate SLP OP_RETURN.",
        "detailedDescription": "Returns OP_RETURN script and outputs",
        "endpoint": "/slp/generateSendOpReturn/",
        "parametersName": "tokenUtxos , sendQty",
        "parameterDescription": "Array of Token Utxos , Token Quantity ",
        "body": {
          "tokenUtxos": [
            {
              "tokenId": "7380843cd1089a1a01783f86af37734dc99667a1cdc577391b5f6ea42fc1bfb4",
              "decimals": 0,
              "tokenQty": 2
            }
          ],
          "sendQty": 1.5
        }
      },
      {
        "type": "post",
        "shortDescription": "Hydrate UTXO data with SLP information.",
        "detailedDescription": "Expects an array of UTXO objects as input. Returns an array of equal size. Returns UTXO data hydrated with token information. If the UTXO does not belong to a SLP transaction, it will return an isValid property set to false. If the UTXO is part of an SLP transaction, it will return the UTXO object with additional SLP information attached. An isValid property will be included. If its value is true, the UTXO is a valid SLP UTXO. If the value is null, then SLPDB has not yet processed that txid and validity has not been confirmed.",
        "endpoint": "/slp/hydrateUtxos/",
        "parametersName": "utxos",
        "parameterDescription": "Array of Token Utxos",
        "body": {
          "utxos": [
            {
              "utxos": [
                {
                  "txid": "d56a2b446d8149c39ca7e06163fe8097168c3604915f631bc58777d669135a56",
                  "vout": 3,
                  "value": "6816",
                  "height": 606848,
                  "confirmations": 13,
                  "satoshis": 6816
                },
                {
                  "txid": "d56a2b446d8149c39ca7e06163fe8097168c3604915f631bc58777d669135a56",
                  "vout": 2,
                  "value": "546",
                  "height": 606848,
                  "confirmations": 13,
                  "satoshis": 546
                }
              ]
            }
          ]
        }
      },
      {
        "type": "get",
        "shortDescription": "Get the health status of SLPDB",
        "detailedDescription": "Get the health status of SLPDB",
        "endpoint": "/slp/status"
      },
      {
        "type": "get",
        "shortDescription": "Get all NFT children for a given NFT group",
        "detailedDescription": "Get all NFT children for a given NFT group",
        "endpoint": "/slp/nftChildren/",
        "parameters": "8a197b149db1375556b02001fd3b6a21b314d893086cec6cecf83a39f64b0a98",
        "parametersName": "tokenID",
        "parameterDescription": "Token ID"
      },
      {
        "type": "get",
        "shortDescription": "Get the NFT group for a given NFT child token",
        "detailedDescription": "Get the NFT group for a given NFT child token",
        "endpoint": "/slp/nftGroup/",
        "parameters": "0c6ab064f2b898a5fab3310d4a3185c12bab25402a5165a5348d472e2429e2eb",
        "parametersName": "tokenID",
        "parameterDescription": "Token ID"
      }
    ]
  },
  {
    "name": "DSProof",
    "description": "Get Double Spend info",
    "docUrl": "https://bchn.fullstack.cash/docs/",
    "endpoints": [
      {
        "type": "get",
        "shortDescription": "Get information for a double-spend proof.",
        "detailedDescription": "Get information for a double-spend proof.",
        "endpoint": "/dsproof/getdsproof/",
        "parameters": "ee0df780b58f6f24467605b2589c44c3a50fc849fb8f91b89669a4ae0d86bc7e",
        "parametersName": "txid",
        "parameterDescription": "Transaction id"
      }
    ]
  },
    {
      "name": "JWT",
      "description": "Get JWT Info",
      "docUrl": "https://bchn.fullstack.cash/docs/#api-JWT-GetJWTInfo",
      "endpoints": [
        {
          "type": "post",
          "shortDescription": "Get info on your JWT token.",
          "detailedDescription": "Get info on your JWT token. Useful for debugging rate limit issues with your JWT token.",
          "endpoint": "/jwt/info",
          "parametersName": "JWT",
          "parameterDescription": "Json Web Token",
          "body": {
            "jwt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlODk3YWJhMDIyMWMxMDAxMmFkOTQwNCIsImVtYWlsIjoiZGFuaWVsaHVtZ29uQGdtYWlsLmNvbSIsImFwaUxldmVsIjo2MCwicmF0ZUxpbWl0IjozLCJwb2ludHNUb0NvbnN1bWUiOjE2LCJkdXJhdGlvbiI6MzAsImlhdCI6MTYyMDY4MzYxNSwiZXhwIjoxNjIzMjc1NjE1fQ.vb3DzOtRf0LGaRB4fJ0e9SKv3-1dKhDIhWl5tYYxgiU"
          }
        }
      ]
    },
    {
      "name": "PSF SLP",
      "description": "PSF SLP",
      "docUrl": "https://api.fullstack.cash/docs/#api-PSF_SLP",
      "endpoints": [
        {
          "type": "get",
          "shortDescription": "PSF SLP - Indexer Status.",
          "detailedDescription": "Get psf slp indexer status.",
          "endpoint": "/psf/slp/status/",
          "parameters": "",
          "parametersName": "",
          "parameterDescription": ""
        },
        {
          "type": "post",
          "shortDescription": "List stats for a single slp token.",
          "detailedDescription": "Return list stats for a single slp token.",
          "endpoint": "/psf/slp/token",
          "parametersName": "tokenId",
          "parameterDescription": "Token Id",
          "body": {
            "tokenId": "a4fb5c2da1aa064e25018a43f9165040071d9e984ba190c222a7f59053af84b2"
          }
        },
        {
          "type": "post",
          "shortDescription": "SLP balance for address.",
          "detailedDescription": "Return SLP balance for address.",
          "endpoint": "/psf/slp/address/",
          "parametersName": "address",
          "parameterDescription": "BCH Address",
          "body": {
            "address": "bitcoincash:qzmd5vxgh9m22m6fgvm57yd6kjnjl9qnwywsf3583n"
          }
        },
        {
          "type": "post",
          "shortDescription": "SLP transaction data.",
          "detailedDescription": "Return slp transaction data.",
          "endpoint": "/psf/slp/txid/",
          "parametersName": "txid",
          "parameterDescription": "Transaction Id",
          "body": {
            "txid": "f3e14cd871402a766e85045dc552f2c1e87857dd3ea1b15efab6334ccef5e315"
          }
        }
      ]
    }
]
